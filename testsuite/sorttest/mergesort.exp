set testdata {
    {"merge1" "0 0 1 2 1 2" "^1 2.*$"}
    {"merge2" "0 0 1 2 2 1" "^1 2.*$"}
    {"merge3" "0 0 4 5 1 2 3 4 0" "^0 1 2 3 4.*$"}
    {"merge4" "0 0 1 5 4 0 1 2 3" "^0 1 2 3 4.*$"}
    {"merge5" "0 4 5 6 4 3 2 1 6 5" "^4 3 2 1 5 6.*$"}
    {"split1" "1 0 1 5" "5.*$"}
    {"split2" "1 0 2 2 -2" "^-2 2.*$"}
    {"split3" "1 0 3 3 2 1" "^1 2 3.*$"}
    {"split4" "1 3 6 3 2 1 6 5 4" "^3 2 1 4 5 6.*$"}
    {"sort1" "2 4 1 1 1 1" "^1 1 1 1.*$"}
    {"sort2" "2 4 1 2 3 4" "^1 2 3 4.*$"}
    {"sort3" "2 4 4 3 2 1" "^1 2 3 4.*$"}
    {"sort4" "2 3 -2 -5 -6" "^-6 -5 -2.*$"}
    {"sort5" "2 3 -6 -5 -2" "^-6 -5 -2.*$"}
}

global SORTTEST
foreach pattern $testdata {
    eval "spawn $SORTTEST [lindex $pattern 1]"
    expect {
        -re [lindex $pattern 2] { pass [lindex $pattern 0] }
        default { fail [lindex $pattern 0] }
    }
}
